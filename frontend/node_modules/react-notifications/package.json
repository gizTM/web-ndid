{
  "_from": "react-notifications",
  "_id": "react-notifications@1.4.3",
  "_inBundle": false,
  "_integrity": "sha1-cGDTOYlvElpbGD680EUmmApDMiI=",
  "_location": "/react-notifications",
  "_phantomChildren": {
    "chain-function": "1.0.0",
    "dom-helpers": "3.3.1",
    "loose-envify": "1.3.1",
    "prop-types": "15.6.1",
    "warning": "3.0.0"
  },
  "_requested": {
    "escapedName": "react-notifications",
    "fetchSpec": "latest",
    "name": "react-notifications",
    "raw": "react-notifications",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-notifications/-/react-notifications-1.4.3.tgz",
  "_shasum": "7060d339896f125a5b183ebcd04526980a433222",
  "_shrinkwrap": null,
  "_spec": "react-notifications",
  "_where": "/Users/tharineemunk/service-mgmt-webapp/frontend",
  "author": {
    "name": "Minh Tran"
  },
  "bugs": {
    "url": "https://github.com/minhtranite/react-notifications/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "classnames": "^2.1.1",
    "prop-types": "^15.5.10",
    "react-transition-group": "^1.2.0"
  },
  "deprecated": false,
  "description": "Notification component for ReactJS",
  "devDependencies": {
    "autoprefixer": "^7.0.1",
    "babel-cli": "^6.8.0",
    "babel-core": "^6.8.0",
    "babel-eslint": "^7.1.1",
    "babel-loader": "^7.0.0",
    "babel-plugin-add-module-exports": "^0.2.0",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-plugin-transform-object-rest-spread": "^6.23.0",
    "babel-preset-env": "^1.2.2",
    "babel-preset-react": "^6.24.1",
    "bootstrap": "^3.3.7",
    "camelcase": "^4.1.0",
    "clean-webpack-plugin": "^0.1.9",
    "cross-env": "^4.0.0",
    "css-loader": "^0.28.0",
    "cssnano": "^3.5.2",
    "del": "^3.0.0",
    "eslint": "^3.15.0",
    "eslint-config-airbnb": "^15.0.1",
    "eslint-loader": "^1.3.0",
    "eslint-plugin-import": "^2.3.0",
    "eslint-plugin-jsx-a11y": "^5.0.3",
    "eslint-plugin-react": "^7.0.1",
    "express": "^4.15.3",
    "extract-text-webpack-plugin": "^2.1.0",
    "file-loader": "^0.11.1",
    "flux": "^3.1.2",
    "globby": "^6.1.0",
    "gulp": "^3.9.1",
    "gulp-babel": "^6.1.2",
    "gulp-concat": "^2.6.1",
    "gulp-postcss": "^7.0.0",
    "gulp-sass": "^3.1.0",
    "html-webpack-plugin": "^2.28.0",
    "http-proxy": "^1.16.2",
    "node-sass": "^4.5.0",
    "postcss-loader": "^2.0.5",
    "react": "^15.5.4",
    "react-dom": "^15.5.4",
    "react-hot-loader": "^1.3.1",
    "react-router-dom": "^4.1.1",
    "run-sequence": "^1.2.2",
    "sass-loader": "^6.0.1",
    "style-loader": "^0.18.2",
    "webpack": "^2.2.1",
    "webpack-dev-middleware": "^1.6.1",
    "webpack-hot-middleware": "^2.10.0",
    "webpack-stream": "^3.2.0"
  },
  "homepage": "https://github.com/minhtranite/react-notifications",
  "keywords": [
    "react-component",
    "react",
    "component",
    "notifications",
    "notification"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "react-notifications",
  "optionalDependencies": {},
  "readme": "# React Notifications\n\n[<img src=\"./screenshot.png\" style=\"width: 100%;\" />](http://minhtranite.github.io/react-notifications)\n\n## Installation\n\n```\nnpm install --save react-notifications\n```\n\n## Usage\n\n### Note\n\n**Use only one 'NotificationContainer' component in the app.**\n\n### CSS\n\n#### Webpack:\n```js\nimport 'react-notifications/lib/notifications.css';\n```\n\n#### Other\n```html\n<link rel=\"stylesheet\" type=\"text/css\" href=\"path/to/notifications.css\">\n```\n\n### JS\n\n```js\nimport React from 'react';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\n\nclass Example extends React.Component {\n  createNotification = (type) => {\n    return () => {\n      switch (type) {\n        case 'info':\n          NotificationManager.info('Info message');\n          break;\n        case 'success':\n          NotificationManager.success('Success message', 'Title here');\n          break;\n        case 'warning':\n          NotificationManager.warning('Warning message', 'Close after 3000ms', 3000);\n          break;\n        case 'error':\n          NotificationManager.error('Error message', 'Click me!', 5000, () => {\n            alert('callback');\n          });\n          break;\n      }\n    };\n  };\n\n  render() {\n    return (\n      <div>\n        <button className='btn btn-info'\n          onClick={this.createNotification('info')}>Info\n        </button>\n        <hr/>\n        <button className='btn btn-success'\n          onClick={this.createNotification('success')}>Success\n        </button>\n        <hr/>\n        <button className='btn btn-warning'\n          onClick={this.createNotification('warning')}>Warning\n        </button>\n        <hr/>\n        <button className='btn btn-danger'\n          onClick={this.createNotification('error')}>Error\n        </button>\n\n        <NotificationContainer/>\n      </div>\n    );\n  }\n}\n\nexport default Example;\n```\n\n### UMD\n\n```html\n<link rel=\"stylesheet\" type=\"text/css\" href=\"path/to/react-notifications/dist/react-notifications.css\">\n<script src=\"path/to/react-notifications/dist/react-notifications.js\"></script>\n```\n\n```js\nconst NotificationContainer = window.ReactNotifications.NotificationContainer;\nconst NotificationManager = window.ReactNotifications.NotificationManager;\n```\n\nExample [here](https://codepen.io/minhtranite/pen/RgoaLL)\n\n## NotificationContainer Props\n\n| Name | Type | Default | Required |\n|------|------|---------|----------|\n| enterTimeout | number | 400 | false |\n| leaveTimeout | number | 400 | false |\n\n## NotificationManager API\n\n- NotificationManager.info(message, title, timeOut, callback, priority);\n- NotificationManager.success(message, title, timeOut, callback, priority);\n- NotificationManager.warning(message, title, timeOut, callback, priority);\n- NotificationManager.error(message, title, timeOut, callback, priority);\n\n| Name | Type | Description |\n|------|------|-------------|\n| message | string | The message string |\n| title | string | The title string |\n| timeOut | integer | The popup timeout in milliseconds |\n| callback | function | A function that gets fired when the popup is clicked |\n| priority | boolean | If true, the message gets inserted at the top |\n\n## Example\nView [demo](http://minhtranite.github.io/react-notifications) or example folder.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/minhtranite/react-notifications.git"
  },
  "scripts": {
    "build": "NODE_ENV=production gulp build",
    "lint": "NODE_ENV=development eslint .",
    "start": "NODE_ENV=development babel-node example/webpack.server.js --hot"
  },
  "version": "1.4.3"
}
